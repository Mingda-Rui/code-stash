/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

apply plugin:'base'

task hello {
    doLast {
        println 'Hello world!'
    }
}

task intro {
    dependsOn hello
    doLast {
        println "I'm Gradle"
    }
}

task upper {
    doLast {
        String someString = 'mY_nAmE'
        println "Original: $someString"
        println "Upper case: ${someString.toUpperCase()}"
    }
}

task count {
    doLast {
        4.times { print "$it " }
    }
}

task taskX {
    dependsOn 'taskY'
    doLast {
        println 'taskX'
    }
}

task taskY {
    doLast {
        println 'taskY'
    }
}

// Example 7. Dynamic creation of a task
4.times { counter -> 
    task "task$counter" {
        doLast {
            println "I'm task number $counter"
        }
    }
}
task0.dependsOn task2, task3

// Accessing a task via API
task hello2 {
    doLast {
        println 'Hello Earth'
    }
}
hello2.doFirst {
    println 'Hello Venus'
}
hello2.configure {
    doLast {
        println 'Hello Mars'
    }
}
hello2.configure {
    doLast {
        println 'Hello Jupiter'
    }
}

// Groovy DSL shortcut notions
task hello3 {
    doLast {
        println 'Hello world!'
    }
}
hello3.doLast {
    println "Greetins from the $hello.name task."
}

// Extra task properties
task myTask {
    println "myTask start!"
    // this ext object belongs to this task,
    // not the global ext for the "project"
    ext.myProperty = "myValue"
    println "myTask sets value for ext.myProperty!"
}

task printTaskProperties {
    dependsOn myTask
    doLast {
        println "myTask.myProperty: $myTask.myProperty"
    }
}

// Using Ant Tasks
task loadfile {
    doLast {
        def files = file('./antLoadfileResources').listFiles().sort()
        file.each { File file ->
            ant.loadfile(srcFile: file, property: file.name)
            println " *** $file.name ***"
            println "${ant.properties[file.name]}"
        }
    }
}

// Using methods
task checksum {
    doLast {
        fileList('./antLoadfileResources').each { File file ->
            ant.checksum(file: file, property: "cs_$file.name")
            println "$file.name Checksum: ${ant.properties["cs_$file.name"]}"
        }
    }
}

task loadfile2 {
    doLast {
        fileList('./antLoadfileResources').each { File file ->
            ant.loadfile(srcFile: file, proerpty: file.name)
            println "I'm fond of $file.name"
        }
    }
}

File[] fileList(String dir) {
    file(dir).listFiles({file -> file.isFile() } as FileFilter).sort()
}

// Default tasks
defaultTasks 'customizedClean', 'run'

task customizedClean {
    doLast {
        println 'Default Cleaning!'
    }
}

task run {
    doLast {
        println 'Default Running!'
    }
}

task other {
    doLast {
        println "I'm not a default task!"
    }
}

// Configure by DAG
// Different outcomes of build depending on chosen tasks
task distribution {
    println "test print from distribution task"
    doLast {
        println "We build the zip with version=$version"
    }
}

task release {
    dependsOn 'distribution'
    doLast {
        println 'We release now'
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(":release")) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}





def cL = {
    def dL = doLast {
        println 'taskY'
    }
    println dL.getClass()
}
println "closure: ${cL.getClass()}"

task(test, cL)